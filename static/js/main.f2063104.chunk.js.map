{"version":3,"sources":["components/Todo/index.js","Redux/actions.js","Redux/selector.js","components/TodoList/index.js","components/Filters/index.js","App.js","components/Filters/FiltersSlice.js","components/TodoList/TodolistSlice.js","Redux/reducer.js","Redux/store.js","index.js"],"names":["priorityColorMapping","High","Medium","Low","Todo","name","priority","useState","checked","setChecked","justify","style","marginBottom","opacity","textDecoration","onChange","color","margin","addTodo","data","type","payload","searchTextFilter","text","statusFilterChange","status","priorityFilterChange","priorities","todosRemainingSelector","createSelector","state","todoList","filters","search","searchText","filter","todo","length","includes","completed","TodoList","todoName","setTodoName","setPriority","useSelector","dispatch","useDispatch","height","span","overflowY","map","id","Group","display","compact","value","e","console","log","target","defaultValue","Option","label","onClick","uuidv4","Search","Input","Filters","setSearchText","filterStatus","setFilterStatus","filterPriorities","setFilterPriorities","Paragraph","fontWeight","marginTop","placeholder","sm","mode","allowClear","width","Title","Typography","App","flexDirection","backgroundColor","padding","boxShadow","borderRadius","textAlign","initState","filtersReducer","action","todoListReducer","RootReducer","combineReducers","composedEnhancers","composeWithDevTools","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f2063104.chunk.js","sourcesContent":["import { Row, Tag, Checkbox } from 'antd';\r\nimport { useState } from 'react';\r\n\r\nconst priorityColorMapping = {\r\n  High: 'red',\r\n  Medium: 'blue',\r\n  Low: 'gray',\r\n};\r\n\r\nexport default function Todo({ name, priority }) {\r\n  const [checked, setChecked] = useState(false);\r\n\r\n  const toggleCheckbox = () => {\r\n    setChecked(!checked);\r\n  };\r\n\r\n  return (\r\n    <Row\r\n      justify='space-between'\r\n      style={{\r\n        marginBottom: 3,\r\n        ...(checked ? { opacity: 0.5, textDecoration: 'line-through' } : {}),\r\n      }}\r\n    >\r\n      <Checkbox checked={checked} onChange={toggleCheckbox}>\r\n        {name}\r\n      </Checkbox>\r\n      <Tag color={priorityColorMapping[priority]} style={{ margin: 0 }}>\r\n        {priority}\r\n      </Tag>\r\n    </Row>\r\n  );\r\n}\r\n","// export const addTodoAction ={\n//     type: 'todoList/addTodo',// đoạn test môt tả hành động là gì  `type : tên tính năng/hành động`\n//     payload:{id:3,name:'Learn JavaScript', completed:true, priority:'Low'} //thông tin người dùng đã nhập ở UI : name, chọn priority\n// }\n\n// action creators => function trả về 1 action \n//  nên dùng action creators này để viết các đoạn code không lặp đi lặp lại\n//  chỉ việc gọi đến action creators\n//  khi có sự thay đổi thì chỉ cần sửa lại 1 chỗ thôi còn tất cả chỗ gọi sẽ được update lại \n\nexport const addTodo =(data) =>{\n    return {\n        type:'todoList/addTodo',\n        payload :data\n    }\n}\nexport const searchTextFilter=(text)=>{\n    return {\n        type:'filter/searchTextFilter',\n        payload:text\n    }\n}\nexport const toggleTodoStatus = (todoId) => {\n    return {\n      type: 'todoList/toggleTodoStatus',\n      payload: todoId,\n    };\n  };\n\n  export const statusFilterChange = (status) => {\n    return {\n      type: 'filters/statusFilterChange',\n      payload: status,\n    };\n  };\n  \nexport const priorityFilterChange = (priorities) => {\nreturn {\n    type: 'filters/prioritiesFilterChange',\n    payload: priorities,\n}}","// export const todolistSelector = (state)=>{\n//     const searchText =searchTextSeclector(state)\n//     return state.todoList.filters(todo=>todo.name.includes(searchText))\n// }\n// export const searchTextSeclector=(state=>state.filters.search)\n\n// import { createSelector } from \"selector\"\n// export const todolistSelector =state=>state.todoList\n// export const searchFilterSeclector=state=>state.filters.search\n\n// export const todoRemainingSeclector=createSelector(todolistSelector,searchFilterSeclector,(todoList,searchText)=>{\n//     return todoList.filter(todo=>todo.name.includes(searchText))\n\n// })\n\nimport { createSelector } from 'reselect';\n\nexport const searchTextSelector = (state) => state.filters.search;\nexport const filterStatusSelector = (state) => state.filters.status;\nexport const filterPrioritiesSelector = (state) => state.filters.priorities;\nexport const todoListSelector = (state) => state.todoList;\n\nexport const todosRemainingSelector = createSelector(\n  todoListSelector,\n  filterStatusSelector,\n  searchTextSelector,\n  filterPrioritiesSelector,\n  (todoList, status, searchText, priorities) => {\n    return todoList.filter((todo) => {\n      if (status === 'All') {\n        return priorities.length\n          ? todo.name.includes(searchText) && priorities.includes(todo.priority)\n          : todo.name.includes(searchText);\n      }\n\n      return (\n        todo.name.includes(searchText) &&\n        (status === 'Completed' ? todo.completed : !todo.completed) &&\n        (priorities.length ? priorities.includes(todo.priority) : true)\n      );\n    });\n  })","\r\nimport { Col, Row, Input, Button, Select, Tag } from 'antd';\r\nimport Todo from '../Todo';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addTodo } from '../../Redux/actions';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { useState } from 'react';\r\nimport { todosRemainingSelector } from '../../Redux/selector';\r\n\r\nexport default function TodoList() {\r\n  const [todoName, setTodoName] = useState('');\r\n  const [priority, setPriority] = useState('Medium');\r\n\r\n  const todoList = useSelector(todosRemainingSelector);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleAddButtonClick = () => {\r\n    dispatch(\r\n      addTodo({\r\n        id: uuidv4(),//tự động cho 1 id ngẫu nhiên và duy nhất \r\n        name: todoName,\r\n        priority: priority,\r\n        completed: false,\r\n      })\r\n    );\r\n // reset lại input\r\n    setTodoName('');\r\n    setPriority('Medium');\r\n  };\r\n // Khi thêm mới việc cần làm thì ta điền đủ như {} ở trên (cái mìn tự tạo ra ở reducer)\r\n //  Mỗi việc cần làm cần tạo ra 1 id duy nhất, mình sử dụng thư viện uuid \r\n  const handleInputChange = (e) => {\r\n    console.log('handleInputChange', e.target.value);\r\n    setTodoName(e.target.value);\r\n  };\r\n\r\n  const handlePriorityChange = (value) => {\r\n    setPriority(value);\r\n  };\r\n // vì select ni của thư viên antd nên value của nó chính là giá trị value mình lựa chọn lun \r\n  return (\r\n    <Row style={{ height: 'calc(100% - 40px)' }}>\r\n      <Col span={24} style={{ height: 'calc(100% - 40px)', overflowY: 'auto' }}>\r\n        {todoList.map((todo) => (\r\n          <Todo\r\n            key={todo.id}\r\n            id={todo.id}\r\n            name={todo.name}\r\n            priority={todo.priority}\r\n            completed={todo.completed}\r\n          />\r\n        ))}\r\n      </Col>\r\n      <Col span={24}>\r\n        <Input.Group style={{ display: 'flex' }} compact>\r\n          <Input value={todoName} onChange={handleInputChange} />\r\n          <Select\r\n            defaultValue='Medium'\r\n            value={priority}\r\n            onChange={handlePriorityChange}\r\n          >\r\n            <Select.Option value='High' label='High'>\r\n              <Tag color='red'>High</Tag>\r\n            </Select.Option>\r\n            <Select.Option value='Medium' label='Medium'>\r\n              <Tag color='blue'>Medium</Tag>\r\n            </Select.Option>\r\n            <Select.Option value='Low' label='Low'>\r\n              <Tag color='gray'>Low</Tag>\r\n            </Select.Option>\r\n          </Select>\r\n          <Button type='primary' onClick={handleAddButtonClick}>\r\n            Add\r\n          </Button>\r\n        </Input.Group>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}","\r\nimport { Col, Row, Input, Typography, Radio, Select, Tag } from 'antd';\r\nimport { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { priorityFilterChange, searchTextFilter, statusFilterChange } from '../../Redux/actions';\r\n\r\nconst { Search } = Input;\r\n\r\nexport default function Filters() {\r\n  const dispatch = useDispatch();\r\n\r\n  const [searchText, setSearchText] = useState('');\r\n  const [filterStatus, setFilterStatus] = useState('All');\r\n  const [filterPriorities, setFilterPriorities] = useState([]);\r\n  //lưu dữ liệu vào searchText\r\n  const handleSearchTextChange = (e) => {\r\n    setSearchText(e.target.value);\r\n    dispatch(searchTextFilter(e.target.value));\r\n  };\r\n\r\n  const handleStatusChange = (e) => {\r\n    setFilterStatus(e.target.value);\r\n    dispatch(statusFilterChange(e.target.value));\r\n  };\r\n\r\n  const handlePriorityChange = (value) => {\r\n    setFilterPriorities(value);\r\n    dispatch(priorityFilterChange(value));\r\n  }\r\n\r\n  return (\r\n    <Row justify='center'>\r\n      <Col span={24}>\r\n        <Typography.Paragraph\r\n          style={{ fontWeight: 'bold', marginBottom: 3, marginTop: 10 }}\r\n        >\r\n          Search\r\n        </Typography.Paragraph>\r\n        <Search\r\n          placeholder='input search text'\r\n          value={searchText}\r\n          onChange={handleSearchTextChange}\r\n        />\r\n      </Col>\r\n      <Col sm={24}>\r\n        <Typography.Paragraph\r\n          style={{ fontWeight: 'bold', marginBottom: 3, marginTop: 10 }}\r\n        >\r\n          Filter By Status\r\n        </Typography.Paragraph>\r\n        <Radio.Group value={filterStatus} onChange={handleStatusChange}>\r\n          <Radio value='All'>All</Radio>\r\n          <Radio value='Completed'>Completed</Radio>\r\n          <Radio value='Todo'>To do</Radio>\r\n        </Radio.Group>\r\n      </Col>\r\n      <Col sm={24}>\r\n        <Typography.Paragraph\r\n          style={{ fontWeight: 'bold', marginBottom: 3, marginTop: 10 }}\r\n        >\r\n          Filter By Priority\r\n        </Typography.Paragraph>\r\n        <Select\r\n          mode='multiple'\r\n          allowClear\r\n          placeholder='Please select'\r\n          style={{ width: '100%' }}\r\n          value={filterPriorities}\r\n          onChange={handlePriorityChange}\r\n        >\r\n          <Select.Option value='High' label='High'>\r\n            <Tag color='red'>High</Tag>\r\n          </Select.Option>\r\n          <Select.Option value='Medium' label='Medium'>\r\n            <Tag color='blue'>Medium</Tag>\r\n          </Select.Option>\r\n          <Select.Option value='Low' label='Low'>\r\n            <Tag color='gray'>Low</Tag>\r\n          </Select.Option>\r\n        </Select>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}","import { Typography, Divider } from 'antd';\nimport './App.css';\nimport TodoList from './components/TodoList';\nimport Filters from './components/Filters';\n\nconst { Title } = Typography;\n\nfunction App() {\n  return (\n    <div\n      style={{\n        width: 500,\n        margin: '0 auto',\n        display: 'flex',\n        flexDirection: 'column',\n        backgroundColor: 'white',\n        padding: 20,\n        boxShadow: '0 0 10px 4px #bfbfbf',\n        borderRadius: 5,\n        height: '90vh',\n      }}\n    >\n      <Title style={{ textAlign: 'center' }}>TODO APP with REDUX</Title>\n      <Filters />\n      <Divider />\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","\n\nconst initState = {\n    search: '',\n    status: 'All',\n    priorities: [],\n  };\n  \n  const filtersReducer = (state = initState, action) => {\n    switch (action.type) {\n      case 'filter/searchTextFilter':\n        return {\n          ...state,\n          search: action.payload,\n        };\n        case 'filters/statusFilterChange':\n            return {\n                ...state,\n                status: action.payload\n            }\n        \n        case 'filters/prioritiesFilterChange':\n        return {\n            ...state,\n            priorities: action.payload\n        }\n\n        default:\n      return state;\n  }\n};\n\nexport default filtersReducer;","\n// const TodoListReducers = (state=initState,action)=>{\n//     console.log(\"action.payload:\", action.payload)\n//     const prev = () => {\n//         console.log(\"abc\")\n//         const state2 = [\n//                 ...state,\n//                 action.payload\n//         ]\n//     console.log('state2 :', state2)\n//     return state2\n//     }\n//    \n//         default:\n//             return state;\n//         }\n// }\n\n// export default TodoListReducers;\n\nconst initState = [\n    { id: 1, name: 'Learn Yoga', completed: false, priority: 'Medium' },\n    { id: 2, name: 'Learn Redux', completed: true, priority: 'High' },\n    { id: 3, name: 'Learn JavaScript', completed: false, priority: 'Low' },\n  ];\n  \n  const todoListReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'todoList/addTodo':\n        return [...state, action.payload];\n        case 'todoList/toggleTodoStatus':\n            return state.map((todo) =>\n                todo.id === action.payload\n                ? { ...todo, completed: !todo.completed }\n                : todo\n            );\n        default:\n            return state;\n        }\n      };\n      \n      export default todoListReducer;","// const initState={\n//     filter:{\n//      search:'',\n//      status:'All',\n//      priority:[]\n//     },\n//     todoList:[\n//     {id:1,name:'Learn Yoga', completed:false, priority:'Medium'},\n//     {id:2,name:'Learn Redux', completed:true, priority:'High'},\n//     {id:3,name:'Learn JavaScript', completed:true, priority:'Low'}\n//     ]\n//     // mỗi thành phần trong array tượng trưng cho 1 việc cần làm\n// }\n// const RootReducer = (state=initState,action)=>{\n//     console.log(\"action.payload:\", action.payload)\n//     const prev = () => {\n//         console.log(\"abc\")\n\n\n\n//         const state2 = {\n    //           ...state,\n    //             todoList:[\n        //                 ...state.todoList,\n        //                 action.payload\n        //         ]\n        //     }\n//     console.log('state2 :', state2)\n//     return state2\n    \n//     }\n//     console.log(action.type)\n//     switch(action.type) {\n    //         case 'todoList/addTodo':\n    //         console.log('ghsf')\n    //         return prev()\n    //         case 'filter/searchTextFilter':\n    //             return{\n        //                 ...state,\n        //                 filter:{\n            //                     ...state,\n            //                     search:action.payload\n            //                 }\n            //             }\n            //         default:\n            //             return state;\n            //         }\n            // }\n            \n            // export default RootReducer;\n            //  chia nhỏ ra nhiều tính năng để dễ dàng quản lý \n            \n            // tạo ra 2 file filterReducer và TodolistReducer \n            //  THỰC HIỆN split reducer <chia thành các phần nhỏ>\n            \nimport { combineReducers } from \"redux\"\nimport filtersReducer from \"../components/Filters/FiltersSlice\"\nimport todoListReducer from \"../components/TodoList/TodolistSlice\"\n    // const RootReducer =(state={},action)=>{\n    // return {\n    //     filters: FilterReducers(state.filters,action),\n    //     TodoList: TodoListReducers(state.todoList,action)\n    // }\n    // } \n\nconst RootReducer= combineReducers({\n    filters: filtersReducer,\n  todoList: todoListReducer,\n})\nexport default RootReducer","import {createStore} from 'redux'\nimport RootReducer from './reducer'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nconst composedEnhancers=composeWithDevTools()\nconst store=createStore(RootReducer,composedEnhancers)\nexport default store ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './Redux/store'\nimport { Provider } from 'react-redux';\n// bản chất redux cũng sử dụng context API của react\n// store ni được dùng chung ở tất cả component \n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));"],"sourceRoot":""}